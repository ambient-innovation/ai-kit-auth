image: docker:stable

variables:
  DOCKER_DRIVER: overlay2
  DJANGO: django-app
  REACT: ai-kit-auth
  IMAGE_TAG_BACKEND: $CI_REGISTRY_IMAGE/django-ai-kit-auth:$CI_COMMIT_REF_SLUG
  IMAGE_TAG_FRONTEND: $CI_REGISTRY_IMAGE/ai-kit-auth:$CI_COMMIT_REF_SLUG
  DOCKER_HOST: tcp://localhost:2375

stages:
  - lint
  - test
  - build
  - e2e
  - deploy

services:
  - docker:18.09-dind

lint-django:
  image: python:3.7-slim
  stage: lint
  tags:
    - low-load
  before_script:
    - pip install black
  script:
    - black --check $DJANGO/**/*.py --exclude .*/migrations/.*

lint-react:
  image: node:13
  stage: lint
  tags:
    - low-load
  before_script:
    - npm ci --prefix $REACT
  script:
    - npm run --prefix $REACT lint

unit-test-django:
  image: python:3.7-slim
  stage: test
  dependencies:
    - lint-django
  tags:
    - normal-load
  before_script:
    - cd $DJANGO
    - pip install -U pip pipenv
    - pipenv install --deploy --system -d
  script:
    - python runtests.py

unit-test-react:
  image: node:13
  stage: test
  dependencies:
    - lint-react
  tags:
    - normal-load
  before_script:
    - npm ci --prefix $REACT
  script:
    - npm test --prefix $REACT

build-demo-backend:
  stage: build
  dependencies:
    - unit-test-django
  tags:
    - normal-load
  script:
    - docker login -u gitlab-ci-token -p $CI_JOB_TOKEN $CI_REGISTRY
    # https://docs.gitlab.com/ee/ci/docker/using_docker_build.html#using-docker-caching
    - docker pull $CI_REGISTRY_IMAGE/django-ai-kit-auth:develop || true
    - docker build --cache-from $CI_REGISTRY_IMAGE/django-ai-kit-auth:develop -t $IMAGE_TAG_BACKEND --file ./demo/backend/Dockerfile ./
    - docker push $IMAGE_TAG_BACKEND

build-demo-frontend:
  stage: build
  dependencies:
    - unit-test-react
  tags:
    - normal-load
  script:
    - docker login -u gitlab-ci-token -p $CI_JOB_TOKEN $CI_REGISTRY
    - docker pull $CI_REGISTRY_IMAGE/ai-kit-auth:develop || true
    - docker build --cache-from $CI_REGISTRY_IMAGE/ai-kit-auth:develop -t $IMAGE_TAG_FRONTEND --build-arg app_env=production --file ./demo/frontend/Dockerfile ./
    - docker push $IMAGE_TAG_FRONTEND

e2e-test-demo:
  stage: e2e
  dependencies:
    - build-demo-backend
    - build-demo-frontend
  tags:
    - high-load
  artifacts:
    name: "$CI_JOB_STAGE-$CI_COMMIT_REF_NAME-screenshots"
    expire_in: 1 week
    when: always
    paths:
      - screenshots/
      - videos/
    reports:
      junit: test-reports/reporter*.xml
  script:
    - docker login -u gitlab-ci-token -p $CI_JOB_TOKEN $CI_REGISTRY
    - docker pull $IMAGE_TAG_FRONTEND
    - docker run -d -p 3000:5000 $IMAGE_TAG_FRONTEND
    - docker pull $IMAGE_TAG_BACKEND
    - docker run -d -p 8000:8000 -e DJANGO_SESSION_COOKIE_SECURE=False -e DJANGO_CACHE_BACKEND=local $IMAGE_TAG_BACKEND ./run_backend.sh loadfixtures
    - docker run --rm
      -v ${PWD}/cypress/cypress:/app/cypress
      -v ${PWD}/cypress/cypress.json:/app/cypress.json
      -v ${PWD}/cypress/package.json:/app/package.json
      -v ${PWD}/screenshots:/app/cypress/screenshots
      -v ${PWD}/videos:/app/cypress/videos
      -v ${PWD}/test-reports:/app/cypress/results
      --network="host"
      --ipc=host
      ambientinnovation/cypress-docker:latest
      bash -c "npm install && cypress run --browser chrome"

deploy-react:
  image: node:13
  stage: deploy
  dependencies:
    - unit-test-react
  variables:
    GITLAB_URL: gitlab.ambient-innovation.com
  only:
    - master
  tags:
    - low-load
  before_script:
    - npm ci --prefix $REACT
  script:
    - cd ai-kit-auth
    - npm run build
    - npx semantic-release

deploy-django:
  image: python:3.7-slim
  stage: deploy
  dependencies:
    - unit-test-django
  variables:
    PYPI_USERNAME: ambient-innovation
  only:
    - master
  tags:
    - low-load
  before_script:
    - apt-get update && apt-get install -y git
    - git config --global user.name "semantic-release"
    - git config --global user.email "hello@ambient-innovation.com"
    - cd $DJANGO
    - pip install -U pip pipenv
    - pipenv install --deploy --system -d
  script:
    - semantic-release publish
